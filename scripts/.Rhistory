f3dat.building <- f3dat.nofilter %>%
filter(pop.diversity.A %in% poplist2, pop.diversity.B %in% poplist2, pop.diversity.A == pop.diversity.B) %>%
filter(!is.na(building.A), !is.na(building.B), pop.diversity.A == pop.diversity.B,
!A %in% c("Ash040", "Ash002", "Ash033"), !B %in% c("Ash040", "Ash002", "Ash033")) %>%
mutate(type = ifelse(building.A == building.B, "co-burial", "different building"))
f3dat.building
##calculate median to place big dots
avg_point <- f3dat.building %>%
summarize(avg = median(1-f3, na.rm = T)) %>%
pull(avg)
avg_point
p <- ggplot(data = f3dat.building,aes(x=factor(pop.diversity.A, levels = names(lab)), y=1-f3, color = type)) +
geom_jitter(alpha = 0.50, width = 0.25, show.legend = F) +
stat_summary(fun = median, geom = "point", size = 5, show.legend = T)+
ylim(NA, 0.90) +
scale_color_manual("", values = met.brewer("Troy",2)) +
scale_x_discrete(labels = lab) +
coord_flip() +
theme(legend.position="none") +
xlab("Populations")+
ylab(expression(within-population~genetic~distance~(1-italic(f[3])))) +
labs(fill="Populations")+
theme_pubclean() +
theme(legend.position = "top", axis.title.y = element_blank(),
panel.grid = element_blank(), axis.ticks.y = element_blank(),
legend.key=element_blank());p
panelA <- ggplot(data = f3dat.building,aes(x=factor(pop.diversity.A, levels = names(lab)), y=1-f3, color = type)) +
geom_jitter(alpha = 0.50, width = 0.25, show.legend = F) +
stat_summary(fun = median, geom = "point", size = 5, show.legend = T)+
ylim(NA, 0.90) +
scale_color_manual("", values = met.brewer("Troy",2)) +
scale_x_discrete(labels = lab) +
coord_flip() +
theme(legend.position="none") +
xlab("Populations")+
ylab(expression(within-population~genetic~distance~(1-italic(f[3])))) +
labs(fill="Populations")+
theme_pubclean() +
theme(legend.position = "top", axis.title.y = element_blank(),
panel.grid = element_blank(), axis.ticks.y = element_blank(),
legend.key=element_blank());panelA
g <- panelA + panelB + plot_annotation(tag_levels = "A")
g
ggsave("../figures/FigureS8.pdf", g,
device = cairo_pdf, width = 10, height = 5)
g <- panelA + panelB + plot_annotation(tag_levels = "A")
panelA <- ggplot(data = f3dat.building,aes(x=factor(pop.diversity.A, levels = names(lab)), y=1-f3, color = type)) +
geom_jitter(alpha = 0.50, width = 0.25, show.legend = F) +
stat_summary(fun = median, geom = "point", size = 5, show.legend = T)+
ylim(NA, 0.90) +
scale_color_manual("", values = met.brewer("Troy",2)) +
scale_x_discrete(labels = lab) +
coord_flip() +
theme(legend.position="none") +
xlab("Populations")+
ylab(expression(within-population~genetic~distance~(1-italic(f[3])))) +
labs(fill="Populations")+
theme_pubclean() +
theme(legend.position = "top", axis.title.y = element_blank(),
panel.grid = element_blank(), axis.ticks.y = element_blank(),
legend.key=element_blank());panelA
#comment out the next line and write your own path to /scripts folder.
setwd("/Users/ezgimo/Downloads/Altinisiketal2022/scripts")
library(tidyverse)
library(MetBrewer)
library(ggpubr)
library(patchwork)
lab <- c("Catalhoyuk" = "Çatalhöyük",
"Barcin" = "Barcın Höyük",
"Asikli" = "Aşıklı Höyük",
"Boncuklu" = "Boncuklu Höyük",
"Cayonu" = "Çayönü")
##Panel B
##generate data for co-burial frequency
df <- read_csv(I("site,with relatives,no relatives
Barcin,4,6
Catalhoyuk,2,8
Asikli,4,1
Boncuklu,4,1
Cayonu,7,2
")) %>%
pivot_longer(., c("with relatives","no relatives"))
panelB <- ggplot(df, aes(site, value, fill = name)) +
geom_bar(position = "stack",stat="identity") +
scale_fill_manual("", values = rev(met.brewer("Troy",2))) +
geom_bracket(data = NULL,
xmin = 1, xmax = 2, y.position = 11,
label = "W/C Anatolia PN",
tip.length = c(0.05, 0.05), vjust = 0, inherit.aes = F, coord.flip = T, hjust = 0.5, angle = 270) +
geom_bracket(data = NULL,
xmin = 3, xmax = 4, y.position = 11,
label = "C Anatolia PPN",
tip.length = c(0.05, 0.05), vjust = 0, inherit.aes = F, coord.flip = T, hjust = 0.5, angle = 270) +
scale_x_discrete(labels = NULL, limits = names(lab)) +
scale_y_continuous(breaks = seq(2,10,2)) +
coord_flip() +
ylab("Number of individuals in co-burial clusters") +
xlab("") +
theme_pubclean() +
theme(axis.ticks.y = element_blank());panelB
##Panel A
##read data
latlondat <- read_tsv("../data/indsdate.tsv")
f3dat <- read_tsv("../data/f3allData59M2022.tsv")
buildinginfo <- read_tsv("../data/buildinginfo.tsv", na = "NA")
poplist2 <- c("Boncuklu","Asikli","Cayonu", "Catalhoyuk", "Barcin")
##merge and filter data
f3dat <- f3dat %>%
group_by(grp = paste(pmax(A, B), pmin(A, B), sep = "_")) %>%
slice(1) %>%
ungroup() %>%
select(-grp)
f3dat.nofilter <- f3dat %>%
left_join(., latlondat, by = c("A" = "ind")) %>%
left_join(., latlondat, by = c("B" = "ind"), suffix = c(".A",".B")) %>%
left_join(., buildinginfo, by = c("A" = "ind")) %>%
left_join(., buildinginfo, by = c("B" = "ind"), suffix = c(".A",".B")) %>%
filter(nsnps > 500) %>%
unique()
f3dat.building <- f3dat.nofilter %>%
filter(pop.diversity.A %in% poplist2, pop.diversity.B %in% poplist2, pop.diversity.A == pop.diversity.B) %>%
filter(!is.na(building.A), !is.na(building.B), pop.diversity.A == pop.diversity.B,
!A %in% c("Ash040", "Ash002", "Ash033"), !B %in% c("Ash040", "Ash002", "Ash033")) %>%
mutate(type = ifelse(building.A == building.B, "co-burial", "different building"))
f3dat.building <- f3dat.building %>%
group_by(pop.diversity.A, type) %>%
mutate(coburial = median(1-f3)) %>%
ungroup()
panelA <- ggplot(data = f3dat.building,aes(x=factor(pop.diversity.A, levels = names(lab)), y=1-f3, color = type)) +
geom_jitter(alpha = 0.50, width = 0.25, show.legend = F) +
stat_summary(fun = median, geom = "point", size = 5, show.legend = T)+
ylim(NA, 0.90) +
scale_color_manual("", values = met.brewer("Troy",2)) +
scale_x_discrete(labels = lab) +
coord_flip() +
theme(legend.position="none") +
xlab("Populations")+
ylab(expression(within-population~genetic~distance~(1-italic(f[3])))) +
labs(fill="Populations")+
theme_pubclean() +
theme(legend.position = "top", axis.title.y = element_blank(),
panel.grid = element_blank(), axis.ticks.y = element_blank(),
legend.key=element_blank());panelA
g <- panelA + panelB + plot_annotation(tag_levels = "A")
ggsave("../figures/FigureS8.pdf", g,
device = cairo_pdf, width = 10, height = 5)
#comment out the next line and write your own path to /scripts folder.
setwd("/Users/ezgimo/Downloads/Altinisiketal2022/scripts")
library(rcarbon)
library(MetBrewer)
library(patchwork)
library(tidyverse)
##generate all data
dat <- read.csv(text = "id,c14,stderr,sitename,group
cay013,8728,40,cayonu,Cell building
cay022,9049,37,cayonu,All dated individuals
cay011,8536,43,cayonu,Cell building
cay014,8852,42,cayonu,All dated individuals
cay016,8728,39,cayonu,Cell building
cay008,8708,38,cayonu,Cell building
cay007,9213,39,cayonu,All dated individuals
cay004,8573,37,cayonu,Cell building
cay004,8573,37,cayonu,All dated individuals
cay016,8728,39,cayonu,All dated individuals
cay008,8708,38,cayonu,All dated individuals
cay011,8536,43,cayonu,All dated individuals
cay013,8728,40,cayonu,All dated individuals")
##generate data for Cell-Building phase
datCell <- read.csv(text = "id,c14,stderr,sitename,building
cay013,8728,40,cayonu,CA
cay011,8536,43,cayonu,CN
cay016,8728,39,cayonu,CL
cay008,8708,38,cayonu,CA
cay004,8573,37,cayonu,CL")
caldates <- calibrate(dat$c14, errors = dat$stderr, calCurves = "intcal20", normalised = F)
library(rcarbon)
library(MetBrewer)
library(patchwork)
library(tidyverse)
##generate all data
dat <- read.csv(text = "id,c14,stderr,sitename,group
cay013,8728,40,cayonu,Cell building
cay022,9049,37,cayonu,All dated individuals
cay011,8536,43,cayonu,Cell building
cay014,8852,42,cayonu,All dated individuals
cay016,8728,39,cayonu,Cell building
cay008,8708,38,cayonu,Cell building
cay007,9213,39,cayonu,All dated individuals
cay004,8573,37,cayonu,Cell building
cay004,8573,37,cayonu,All dated individuals
cay016,8728,39,cayonu,All dated individuals
cay008,8708,38,cayonu,All dated individuals
cay011,8536,43,cayonu,All dated individuals
cay013,8728,40,cayonu,All dated individuals")
##generate data for Cell-Building phase
datCell <- read.csv(text = "id,c14,stderr,sitename,building
cay013,8728,40,cayonu,CA
cay011,8536,43,cayonu,CN
cay016,8728,39,cayonu,CL
cay008,8708,38,cayonu,CA
cay004,8573,37,cayonu,CL")
caldates <- calibrate(dat$c14, errors = dat$stderr, calCurves = "intcal20", normalised = F)
##calibrate dates
caldates <- calibrate(dat$c14, errors = dat$stderr, calCurves = "intcal20", normalised = F)
DK.spd = stackspd(caldates,group=dat$group,timeRange=c(11000,9000),runm = 100)
cbDens <- DK.spd[["spds"]][["Cell building"]][["grid"]]
cbDens$phase <- "Cell building"
allDens <- DK.spd[["spds"]][["All dated individuals"]][["grid"]]
allDens$phase <- "All dated individuals"
densData <- bind_rows(cbDens,allDens)
densData
DK.spd
dat$group
##Combined SPDs for all individuals and only Cell-Building phase individuals
DK.spd = stackspd(caldates,group=dat$group,timeRange=c(11000,9000),runm = 100)
cbDens <- DK.spd[["spds"]][["Cell building"]][["grid"]]
cbDens$phase <- "Cell building"
allDens <- DK.spd[["spds"]][["All dated individuals"]][["grid"]]
allDens$phase <- "All dated individuals"
densData <- bind_rows(cbDens,allDens)
p <- ggplot(densData, aes(x=calBP-1950, y=PrDens, fill = phase)) +
geom_area() +
scale_x_reverse(limits = c(8700, 7300)) +
scale_fill_manual("", values = met.brewer("Troy", 2)) +
ylab("Summed Probability") +
xlab("Years BCE") +
facet_grid(phase~.) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.2, 0.45), strip.text = element_blank())
p
##Panel B
library(Bchron)
library(tidyverse)
library(MetBrewer)
ages3 = BchronCalibrate(ages=as.vector(datCell$c14),
ageSds=as.vector(datCell$stderr), ids = datCell$id)
summary(ages3)
##Sample ages from calibration curve
age_samples = sampleAges(ages3)
age_samples
# Now summarise them with quantile - this gives a 95% credible interval
apply(age_samples, 2, quantile, prob=c(0.025,0.975))
colsind <- colnames(age_samples)
colsind
age_diff <- tibble(matrix(nrow = 10000, ncol = 0))
age_diff
agesampDF <- data.frame(age_samples)
agesampDF
for (i in 1:length(colsind)){
for (j in 1:length(colsind)){
if (i != j && i > j) {
age_diff[[paste0(colsind[i],"-",colsind[j])]] = agesampDF[[colsind[i]]] - agesampDF[[colsind[j]]]
}
}
}
age_diff
age_diff <- age_diff %>%
select(-1)
age_diff
##calculate difference between sample ages for each individual pair
colsind <- colnames(age_samples)
age_diff <- tibble(matrix(nrow = 10000, ncol = 0))
agesampDF <- data.frame(age_samples)
for (i in 1:length(colsind)){
for (j in 1:length(colsind)){
if (i != j && i > j) {
age_diff[[paste0(colsind[i],"-",colsind[j])]] = agesampDF[[colsind[i]]] - agesampDF[[colsind[j]]]
}
}
}
age_diff <- age_diff %>%
select(-1)
##co-buried status for individuals
cobury <- read.csv(text = "pair,status,building
cay011-cay013,Different building,NA
cay016-cay013,Different building,NA
cay016-cay011,Different building,NA
cay008-cay013,Co-burial,CA
cay008-cay011,Different building,NA
cay008-cay016,Different building,NA
cay004-cay013,Different building,NA
cay004-cay011,Different building,NA
cay004-cay016,Co-burial,CL
cay004-cay008,Different building,NA")
cobury
age_diff <- reshape2::melt(age_diff)
age_diff <- age_diff %>%
left_join(.,cobury, by = c("variable" = "pair"))
age_diff
age_diff_mean <- age_diff %>%
group_by(variable, status) %>%
summarize(mean = mean(value),
semin = quantile(value, 0.025),
semax = quantile(value, 0.975)) %>%
mutate(sign = ifelse(semin > 0 & semax > 0, "significant",
ifelse(semin < 0 & semax < 0, "significant", "insig")))
age_diff_mean
pDiff <- ggplot(age_diff) +
geom_vline(xintercept = 0, linetype = "dotted") +
geom_density(aes(value, fill = status, color = status), show.legend = T) +
geom_vline(data = age_diff_mean, aes(xintercept = mean, color = status),
linetype = "dashed", show.legend = F) +
geom_point(data = age_diff_mean, aes(x = mean, y = -0.0015, color = status, shape = sign), show.legend = F) +
geom_errorbarh(data = age_diff_mean, aes(xmin = semin, xmax = semax, color = status, y = -0.0015),
height = 0.0001, show.legend = F) +
scale_shape_manual("", values = c("significant" = 16,
"insig" = 1)) +
scale_color_manual("", values = met.brewer("Troy", 2)) +
scale_fill_manual("", values = met.brewer("Troy", 2)) +
facet_wrap(~variable) +
xlab("") +
ylab("") +
guides(shape = "none") +
theme_minimal() +
theme(legend.position = c(0.75,0.15), panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA))
pDiff
g <- p + pDiff + plot_layout(ncol = 2) + plot_annotation(tag_levels = "A"); g
ggsave("../figures/FigureS9.pdf", g, device = cairo_pdf, width = 10, height = 5)
library(pedsuite)
library(tidyverse)
library(patchwork)
library(ggforce)
library(MetBrewer)
dadpedfile <- readr::read_tsv("../data/patside.ped")
dadped <- ped(id = dadpedfile$id, fid = dadpedfile$fid, mid = dadpedfile$mid, sex = dadpedfile$sex, verbose = T, reorder = T)
kinauotDad <- as.tibble(data.frame(ribd::kinship(dadped)), rownames = "inds", .name_repair = make.names) %>%
rename_with(~str_remove(., 'X'))
kinxDad <- as.tibble(data.frame(kinshipX(dadped)), rownames = "inds", .name_repair = make.names) %>%
rename_with(~str_remove(., 'X'))
kinxDad
dadpedcoef <- bind_rows(kinauotDad, kinxDad, .id = "id") %>%
mutate(chr = case_when(id == 1 ~ "autosome",
id == 2 ~ "X")) %>%
pivot_longer(cols = c(as.character(1:19), "21", "cay008")) %>%
select(-id) %>%
group_by(grp = paste(pmax(inds, name),pmin(inds, name), chr, sep = "_")) %>%
slice(1) %>%
ungroup() %>%
select(-grp) %>%
filter(inds != name) %>%
pivot_wider(names_from = chr, values_from = value) %>%
left_join(., select(as.tibble(dadped), c("id","sex")), by = c("inds" = "id")) %>%
left_join(., select(as.tibble(dadped), c("id","sex")), by = c("name" = "id"), suffix = c(".p1", ".p2")) %>%
mutate(degree_auto = case_when(autosome == 0.5 ~ "Identical",
autosome == 0.25 ~ "First Degree",
autosome == 0.125 ~ "Second Degree",
autosome == 0.0625 ~ "Third Degree",
autosome == 0 ~ "Unrelated"),
ellipse_val = case_when(autosome == 0.0625 & X > 0.1 ~ "yes",
TRUE ~ "no"),
cay008_inc = case_when(inds == "cay008" & sex.p2 == 2 ~ "yes",
name == "cay008" & sex.p1 == 2 ~ "yes",
TRUE ~ "no"))
dadpedcoef
dadpedcoef <- bind_rows(kinauotDad, kinxDad, .id = "id") %>%
mutate(chr = case_when(id == 1 ~ "autosome",
id == 2 ~ "X")) %>%
pivot_longer(cols = c(as.character(1:19), "21", "cay008")) %>%
select(-id) %>%
group_by(grp = paste(pmax(inds, name),pmin(inds, name), chr, sep = "_")) %>%
slice(1) %>%
ungroup() %>%
select(-grp) %>%
filter(inds != name) %>%
pivot_wider(names_from = chr, values_from = value) %>%
left_join(., select(as.tibble(dadped), c("id","sex")), by = c("inds" = "id")) %>%
left_join(., select(as.tibble(dadped), c("id","sex")), by = c("name" = "id"), suffix = c(".p1", ".p2")) %>%
mutate(degree_auto = case_when(autosome == 0.5 ~ "Identical",
autosome == 0.25 ~ "First Degree",
autosome == 0.125 ~ "Second Degree",
autosome == 0.0625 ~ "Third Degree",
autosome == 0 ~ "Unrelated"),
ellipse_val = case_when(autosome == 0.0625 & X > 0.1 ~ "yes",
TRUE ~ "no"),
cay008_inc = case_when(inds == "cay008" & sex.p2 == 2 ~ "yes",
name == "cay008" & sex.p1 == 2 ~ "yes",
TRUE ~ "no"))
pos <- position_jitter(width = 0.001, height = 0.001,seed = 2345)
pDad <- ggplot(data = dadpedcoef,aes(autosome, X, fill = degree_auto)) +
geom_jitter(data = filter(dadpedcoef, ellipse_val != "yes" | cay008_inc != "yes"),
position = pos, size = 3, shape = 21) +
geom_jitter(data = filter(dadpedcoef, ellipse_val == "yes", cay008_inc == "yes"),
position = pos, size = 5,shape = 24, color = "black", show.legend = F, color = "red") +
geom_point(data = NULL, x = 0.094811274, y = 0.200943222, color = "#CD0000",  inherit.aes = F,size = 3) +
geom_errorbarh(aes(y = 0.200943222, xmin = 0.094811274 - 2*0.012242365,
xmax = 0.094811274 + 2*0.012242365), inherit.aes = F, height = 0.01, color = "#CD0000") +
geom_errorbar(aes(x = 0.094811274, ymin = 0.200943222 - 2*0.013671947,
ymax = 0.200943222 + 2*0.013671947), inherit.aes = F, width = 0.005, color = "#CD0000") +
geom_mark_hull(data = filter(dadpedcoef, ellipse_val == "yes"), show.legend = F, color = NA) +
ggrepel::geom_text_repel(data = filter(dadpedcoef, ellipse_val == "yes", cay008_inc == "yes"),
aes(label = inds), position = pos, size = 4, show.legend = F,
fontface = "bold", min.segment.length = 0.001, color = "#262626") +
geom_text(data = NULL, x = 0.094811274, y = 0.26, color = "#CD0000",  size = 4, label = c("cay008\ncay013"),
inherit.aes = F) +
#labs(title = "Kinship Coefficient Estimation of Paternal Side",
#     subtitle = "Autosomes vs X-Chromosome") +
xlab("Autosomal theta estimation") +
ylab("X-Chromosomal theta estimation") +
scale_fill_manual("", values = met.brewer("Troy", 5)) +
theme_bw() ; pDad
pedplot <- plot(dadped)
pedplot
mampedfile <- readr::read_tsv("../data/matside.ped")
mamped <- ped(id = mampedfile$id, fid = mampedfile$fid, mid = mampedfile$mid, sex = mampedfile$sex, verbose = T, reorder = T)
kinauotmam <- as.tibble(data.frame(ribd::kinship(mamped)), rownames = "inds", .name_repair = make.names) %>%
rename_with(~str_remove(., 'X'))
kinxmam <- as.tibble(data.frame(kinshipX(mamped)), rownames = "inds", .name_repair = make.names) %>%
rename_with(~str_remove(., 'X'))
mampedcoef <- bind_rows(kinauotmam, kinxmam, .id = "id") %>%
mutate(chr = case_when(id == 1 ~ "autosome",
id == 2 ~ "X")) %>%
pivot_longer(cols = c(as.character(1:19), "21", "cay008")) %>%
select(-id) %>%
group_by(grp = paste(pmax(inds, name),pmin(inds, name), chr, sep = "_")) %>%
slice(1) %>%
ungroup() %>%
select(-grp) %>%
filter(inds != name) %>%
pivot_wider(names_from = chr, values_from = value) %>%
left_join(., select(as.tibble(mamped), c("id","sex")), by = c("inds" = "id")) %>%
left_join(., select(as.tibble(mamped), c("id","sex")), by = c("name" = "id"), suffix = c(".p1", ".p2")) %>%
mutate(degree_auto = case_when(autosome == 0.5 ~ "Identical",
autosome == 0.25 ~ "First Degree",
autosome == 0.125 ~ "Second Degree",
autosome == 0.0625 ~ "Third Degree",
autosome == 0 ~ "Unrelated"),
ellipse_val = case_when(autosome == 0.0625 & X > 0.1 ~ "yes",
TRUE ~ "no"),
cay008_inc = case_when(inds == "cay008" & sex.p2 == 2 ~ "yes",
name == "cay008" & sex.p1 == 2 ~ "yes",
TRUE ~ "no"))
pMom <- ggplot(mampedcoef,aes(autosome, X, fill = degree_auto)) +
geom_jitter(data = filter(mampedcoef, ellipse_val != "yes" | cay008_inc != "yes"),
position = pos, size = 3, shape = 21) +
geom_jitter(data = filter(mampedcoef, ellipse_val == "yes", cay008_inc == "yes"),
position = pos, size = 5,shape = 24, color = "black", show.legend = F, color = "red") +
geom_point(data = NULL, x = 0.094811274, y = 0.200943222, color = "#CD0000",  inherit.aes = F,size = 3) +
geom_errorbarh(aes(y = 0.200943222, xmin = 0.094811274 - 2*0.012242365,
xmax = 0.094811274 + 2*0.012242365), inherit.aes = F, height = 0.01, color = "#CD0000") +
geom_errorbar(aes(x = 0.094811274, ymin = 0.200943222 - 2*0.013671947,
ymax = 0.200943222 + 2*0.013671947), inherit.aes = F, width = 0.005, color = "#CD0000") +
geom_mark_hull(data = filter(mampedcoef, ellipse_val == "yes"), show.legend = F, color = NA) +
ggrepel::geom_text_repel(data = filter(mampedcoef, ellipse_val == "yes", cay008_inc == "yes"),
aes(label = inds), position = pos, size = 4, show.legend = F,
fontface = "bold", min.segment.length = 0.001, color = "#262626") +
geom_text(data = NULL, x = 0.094811274, y = 0.26, color = "#CD0000",  size = 4,
label = c("cay008\ncay013"), inherit.aes = F) +
#labs(title = "Kinship Coefficient Estimation of Maternal Side",
#     subtitle = "Autosomes vs X-Chromosome") +
xlab("Autosomal theta estimation") +
ylab("X-Chromosomal theta estimation") +
scale_fill_manual("", values = met.brewer("Troy", 5)) +
theme_bw() ; pMom
g <- pDad + pMom + plot_layout(guides = "collect") + plot_annotation(tag_levels = "A") & theme(legend.position = "bottom")
ggsave("../figures/FigureS11.pdf", g,
width = 10, height = 5)
pdf("../figures/FigureS10.pdf")
plot(dadped, carrier = c(2,4,5,10,11,18,19,21), aff = "cay008",starred = c(2,4,5,10,11,18,19,21),
title = "Paternal Pedigree", col = list(`#CD0000` = "cay008", steelblue = c(2,4,5,10,11,18,19,21)))
plot(mamped, carrier = c(2,4,5,10,11,18,19,21), aff = "cay008",starred = c(2,4,5,10,11,18,19,21),
title = "Maternal Pedigree", col = list(`#CD0000` = "cay008", steelblue = c(2,4,5,10,11,18,19,21)))
dev.off()
#comment out the next line and write your own path to /scripts folder.
setwd("/Users/ezgimo/Downloads/Altinisiketal2022/scripts")
library(tidyverse)
library(MetBrewer)
id <- read.csv(text="pop	meta	col	dates
Anatolia_Kalehoyuk_OldHittite_BA	AnatoliaBA	#c8477c	3800
Anatolia_Kalehoyuk_Assyrian_BA	AnatoliaBA	#c8477c	3800
Anatolia_Harmanoren_BA	AnatoliaBA	#c8477c	4479
Anatolia_Ovaoren_EBA	AnatoliaBA	#c8477c	4700
Buyukkaya_EC	AnatoliaEC	#e0a2b7	7516
Ikiztepe_LC	AnatoliaLC	#e0376a	5387.272727
CamlibelTarlasi_LC	AnatoliaLC	#e0376a	5486.444444
Anatolia_Catalhoyuk	AnatoliaN	#9f5a70	8000
Anatolia_Barcin	AnatoliaN	#cd70ab	8164
Anatolia_Tepecik_Ciftlik	AnatoliaN	#9f5a70	8352
Anatolia_Boncuklu	AnatoliaN	#9f5a70	9900
Anatolia_Asikli	AnatoliaN	#9f5a70	10000
Alalakh_MLBA	NLevantBA	#79db55	3642.08
Ebla_EMBA	NLevantBA	#79db55	4037.545455
TitrisHoyuk_EBA	NLevantBA	#79db55	4127.333333
Arslantepe_EBA	NLevantBA	#79db55	4540
TellKurdu_MC	NLevantC	#c2d49a	6889
TellKurdu_EC	NLevantC	#c2d49a	7612.4
Arslantepe_LC	NLevantLC	#619f46	5337.117647", sep = "\t")
alldat <- read_tsv("../data/CayonuAllDstats.tsv")
pop1list <- c("Cayonu", "CHG")
alldatFilt <- alldat %>%
filter(pop1 %in% c("CHG"), pop2 %in% c("Anatolia_Boncuklu","Anatolia_Pinarbasi", "Anatolia_Asikli"), outgroup %in% c("Cayonu")) %>%
filter(!test %in% c("Natufian", "Levant_N", "Iran_N", "CayonuCore","Caucasus_lowlands_LN",
"Caucasus_lowlands_LC", "TellKurdu_EC", "TellKurdu_MC", "CHG")) %>%
merge(., id, by.x = "test", by.y = "pop")
alldatFilt$pop2 <- str_replace(alldatFilt$pop2, "Anatolia_Asikli", "Aşıklı")
alldatFilt$pop2 <- str_replace(alldatFilt$pop2, "Anatolia_Pinarbasi", "Pınarbaşı")
alldatFilt$pop2 <- str_replace(alldatFilt$pop2, "Anatolia_Boncuklu", "Boncuklu")
p <- ggplot(alldatFilt, aes(reorder(test, -dates), D, color = pop2, shape = ifelse(abs(as.numeric(as.character(Z))) > 2, ">2", "<2"))) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey50") +
geom_point(size = 3, stroke = 1,position = position_dodge(width = 0.7)) +
geom_errorbar(aes(ymax = D + 2*stderr, ymin = D - 2*stderr), size = 1, width = .3, position = position_dodge(width = 0.7)) +
scale_shape_manual("|Z|", values = c(1,16)) +
scale_color_manual("", values = met.brewer("Hokusai1", 3)) +
xlab(expression(earliest %->% latest)) +
ylab(paste0("D(test, reference; CHG, Çayönü)")) +
theme_bw() +
theme(#axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
text = element_text(face = "bold"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
#axis.title.x = element_blank(),
axis.ticks.x = element_blank()); p
ggsave("../figures/FigureS12.pdf", p, device = cairo_pdf)
